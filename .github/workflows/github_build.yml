name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mysimpleGPTBot

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: botman_chatbot
          MYSQL_USER: root
          MYSQL_PASSWORD: 
          MYSQL_ROOT_PASSWORD: 
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Display working directory path
        run: |
          pwd

      - name: setup environment
        run : ../setenv.sh

      - name: Install Composer dependencies
        run: composer install --no-interaction --optimize-autoloader

      - name: Install NPM dependencies and compile assets
        run: |
          npm install
          npm run production

      - name: Create .env file
        run: cp .env.example .env
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: botman_chatbot
          DB_USERNAME: root
          DB_PASSWORD: 

      - name: Generate application key
        run: php artisan key:generate

      - name: Run tests
        run: php artisan test

      - name: Optimize Laravel for production
        run: php artisan optimize 

      - name: Clear caches
        run: |
          php artisan cache:clear
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear

      # You can add more steps here if needed, such as restarting your web server
      #
      - name: Build process completed successfully
        run: echo "Build process completed successfully."
   
  sonarqube:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
        projectBaseDir: mysimpleGPTBot
        args: >
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.tests=tests/
          -Dsonar.verbose=true

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
